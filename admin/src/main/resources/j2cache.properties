#J2Cache configuration
#j2cache \u6E90\u7801\u5730\u5740https://gitee.com/ld/J2Cache

#########################################
# Cache Broadcast Method
# values:
# jgroups -> use jgroups's multicast
# redis -> use redis publish/subscribe mechanism
#########################################
#\u5E7F\u64AD\u7B56\u7565
#j2cache.broadcast = net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy
j2cache.broadcast = redis

# \u662F\u5426\u5F00\u542F\u4E8C\u7EA7\u7F13\u5B58
j2cache.l2-cache-open=true
j2cache.open-spring-cache= true
j2cache.allow-null-values= true
j2cache.cache-clean-mode= active
j2cache.redis-client=lettuce

#\u7EC4\u64AD\u7684\u901A\u9053\u540D\u79F0
jgroups.channel.name = j2cache

#########################################
# Level 1&2 provider
# values:
# none -> disable this level cache
# ehcache -> use ehcache2 as level 1 cache
# ehcache3 -> use ehcache3 as level 1 cache
# caffeine -> use caffeine as level 1 cache(only in memory)
# redis -> use redis(hashs) as level 2 cache
# [classname] -> use custom provider
#########################################
#\u4E00\u7EA7\u7F13\u5B58\u914D\u7F6E\u4F7F\u7528caffeine
j2cache.L1.provider_class = caffeine
#j2cache.L1.provider_class = ehcache
j2cache.L2.provider_class = redis

# When L2 provider isn't `redis`, using `L2.config_section = redis` to read redis configurations
# j2cache.L2.config_section = redis

# Enable/Disable ttl in redis cache data (if disabled, the object in redis will never expire, default:true)
# \u8BBE\u7F6E\u4E3Afalse redis\u6307\u4EE4\u6C38\u4E0D\u8FC7\u671F\uFF0C\u4E3Atrue\u5219\u4F7F\u7528caffeine.properties\u7684\u914D\u7F6E
# NOTICE: redis hash mode (redis.storage = hash) do not support this feature)
j2cache.sync_ttl_to_redis = true

# Whether to cache null objects by default (default false)
j2cache.default_cache_null_object = true

#########################################
# Cache Serialization Provider
# values:
# fst -> fast-serialization
# kyro -> kyro
# java -> java standard
# [classname implements Serializer]
#########################################
j2cache.serialization = fst

#########################################
# Ehcache configuration
#########################################

#ehcache.name=
#ehcache.configXml=/ehcache.xml
#ehcache3.configXml = /ehcache3.xml

#########################################
# Caffeine configuration
# caffeine.region.[name] = size, xxxx[s|m|h|d]
#
#########################################
caffeine.properties = /caffeine.properties

#########################################
# Redis connection configuration
#########################################

#########################################
# Redis Cluster Mode
#
# single -> single redis server
# sentinel -> master-slaves servers
# cluster -> cluster servers (\u6570\u636E\u5E93\u914D\u7F6E\u65E0\u6548\uFF0C\u4F7F\u7528 database = 0\uFF09
# sharded -> sharded servers  (\u5BC6\u7801\u3001\u6570\u636E\u5E93\u5FC5\u987B\u5728 hosts \u4E2D\u6307\u5B9A\uFF0C\u4E14\u8FDE\u63A5\u6C60\u914D\u7F6E\u65E0\u6548 ; redis://user:password@127.0.0.1:6379/0\uFF09
#
#########################################

#redis.mode = sentinel
redis.mode = single

#redis storage mode (generic|hash)
redis.storage = generic

#cluster name just for sharded
redis.cluster_name = j2cache

## redis cache namespace optional, default[j2cache]
redis.namespace = j2cache

## connection
#redis.hosts = 127.0.0.1:26378,127.0.0.1:26379,127.0.0.1:26380
redis.hosts = 192.168.64.129:6379
redis.timeout = 2000
redis.password =
redis.database = 0

## redis pub/sub channel name
redis.channel = j2cache
## redis pub/sub server (using redis.hosts when empty)
redis.channel.host =

## redis pool properties
redis.maxTotal = 100
redis.maxIdle = 10
redis.maxWaitMillis = 5000
redis.minEvictableIdleTimeMillis = 60000
redis.minIdle = 1
redis.numTestsPerEvictionRun = 10
redis.lifo = false
redis.softMinEvictableIdleTimeMillis = 10
redis.testOnBorrow = true
redis.testOnReturn = false
redis.testWhileIdle = true
redis.timeBetweenEvictionRunsMillis = 300000
redis.blockWhenExhausted = false
redis.jmxEnabled = false


#########################################
# Lettuce scheme
#
# redis -> single redis server
# rediss -> single redis server with ssl
# redis-sentinel -> redis sentinel
# redis-cluster -> cluster servers
#
#########################################

#########################################
# Lettuce Mode
#
# single -> single redis server
# sentinel -> master-slaves servers
# cluster -> cluster servers (\u6570\u636E\u5E93\u914D\u7F6E\u65E0\u6548\uFF0C\u4F7F\u7528 database = 0\uFF09
# sharded -> sharded servers  (\u5BC6\u7801\u3001\u6570\u636E\u5E93\u5FC5\u987B\u5728 hosts \u4E2D\u6307\u5B9A\uFF0C\u4E14\u8FDE\u63A5\u6C60\u914D\u7F6E\u65E0\u6548 ; redis://user:password@127.0.0.1:6379/0\uFF09
#
#########################################

## redis command scan parameter count, default[1000]
#lettuce.scanCount = 1000
lettuce.mode = single
lettuce.namespace = j2cache
lettuce.storage = hash
lettuce.channel = j2cache
lettuce.scheme = redis
lettuce.hosts = 127.0.0.1:6379
lettuce.password = test
lettuce.database = 3
lettuce.sentinelMasterId =
lettuce.maxTotal = 100
lettuce.maxIdle = 10
lettuce.minIdle = 10
# timeout in milliseconds
lettuce.timeout = 10000
# redis cluster topology refresh interval in milliseconds
lettuce.clusterTopologyRefresh = 3000